name: ESPHome Issue Compile

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:  # 允许手动触发

jobs:
  compile:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'esphome-config') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install ESPHome
        run: |
          pip install esphome
          
      - name: Get latest issue content
        id: issue
        if: github.event_name == 'issues'
        uses: actions/github-script@v6
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number
            });
            const content = issue.data.body;
            
            // 提取 YAML 内容 (假设 YAML 内容在 ```yaml 和 ``` 之间)
            const yamlMatch = content.match(/```yaml\s*([\s\S]*?)\s*```/);
            if (!yamlMatch) {
              core.setFailed('No YAML configuration found in issue body');
              return;
            }
            
            const yaml = yamlMatch[1];
            require('fs').writeFileSync('config.yaml', yaml);
            core.setOutput('issue_number', context.payload.issue.number);
      
      - name: Get config from input for manual run
        if: github.event_name == 'workflow_dispatch'
        run: |
          # 如果是手动触发，可以使用仓库中的默认配置文件
          # 或者您可以修改此步骤以使用其他方式获取配置
          cp default_config.yaml config.yaml || echo "No default config found"
      
      - name: Validate and compile ESPHome configuration
        id: compile
        continue-on-error: true
        run: |
          esphome config config.yaml
          esphome compile config.yaml
      
      - name: Comment on issue with result
        if: github.event_name == 'issues'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const compileSuccess = ${{ steps.compile.outcome == 'success' }};
            
            let comment = '';
            if (compileSuccess) {
              comment = '✅ ESPHome 配置验证和编译成功！';
            } else {
              comment = '❌ ESPHome 配置验证或编译失败，请检查配置。';
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.issue.outputs.issue_number }},
              body: comment
            });
